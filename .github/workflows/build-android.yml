name: Build Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          git zip unzip openjdk-17-jdk python3-pip autoconf \
          libtool pkg-config zlib1g-dev libncurses5-dev \
          libncursesw5-dev libtinfo5 cmake libffi-dev \
          libssl-dev libltdl-dev build-essential ccache

    - name: Setup Java
      run: |
        echo "JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64" >> $GITHUB_ENV
        echo "/usr/lib/jvm/java-17-openjdk-amd64/bin" >> $GITHUB_PATH

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install buildozer cython

    - name: Cache Buildozer global directory
      uses: actions/cache@v3
      with:
        path: ~/.buildozer
        key: ${{ runner.os }}-buildozer-${{ hashFiles('buildozer.spec') }}

    - name: Cache Buildozer dependencies
      uses: actions/cache@v3
      with:
        path: .buildozer
        key: ${{ runner.os }}-buildozer-deps-${{ hashFiles('buildozer.spec') }}

    - name: Build with Buildozer
      run: |
        buildozer android debug

    - name: Upload APK artifact
      uses: actions/upload-artifact@v3
      with:
        name: android-apk
        path: bin/*.apk

    - name: Create Release
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v1.0.${{ github.run_number }}
        name: Release v1.0.${{ github.run_number }}
        files: bin/*.apk
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
